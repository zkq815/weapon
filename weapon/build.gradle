apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), viewCodeInt: "10000"]
            }
        }
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "true"//是否输出LOG信息
        }

        release {
//            minifyEnabled true//开启混淆
            buildConfigField "boolean", "LOG_DEBUG", "false"//是否输出LOG信息
            consumerProguardFiles 'proguard-android.txt'
        }
    }
    //开启dataBinding
    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "androidx.annotation:annotation:${rootProject.ext.supportLibraryVersion}"

    //support
    api "androidx.appcompat:appcompat:$rootProject.ext.supportLibraryVersion"
    api "androidx.recyclerview:recyclerview:$rootProject.ext.supportLibraryVersion"
    api "androidx.cardview:cardview:$rootProject.ext.supportLibraryVersion"
    api "androidx.multidex:multidex:$rootProject.ext.multidexVersion"

    // OKHttp
    api "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    api "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.ext.okhttpVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"

    // RxJava
    api "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"

    // GSon
    api "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    api "com.alibaba:fastjson:$rootProject.ext.fastjsonVersoin"

    // eventbus
    api "org.greenrobot:eventbus:$rootProject.ext.eventbusVersion"

    // image
    api "com.squareup.picasso:picasso:$rootProject.ext.picassoVersion"
    api "com.jakewharton.picasso:picasso2-okhttp3-downloader:$rootProject.ext.picassoLoadVersion"

    //去除glide中的support依赖包，防止与项目冲突
    api("com.github.bumptech.glide:glide:$rootProject.ext.glideVersion") {
        exclude group: 'com.android.support'
    }

    //Tangram
    api "com.alibaba.android:tangram:$rootProject.ext.tangramVersion"
    implementation 'com.alibaba.android:tangram:3.3.6@aar'
    // vLayout
    api ("com.alibaba.android:vlayout:$rootProject.ext.vlayoutVersion") {
        transitive = true
        exclude(group: 'com.android.support')
    }
    //virtualview
    api ("com.alibaba.android:virtualview:$rootProject.ext.virtralviewVersion") {
        transitive = true
    }
    //ultraviewpager
    api ("com.alibaba.android:ultraviewpager:$rootProject.ext.ultraviewpagerVersion") {
        transitive = true
    }

    //Tencent MMKV 高性能key-value
    api "com.tencent:mmkv:$rootProject.ext.mmkvVersion"

    //lottie 动画框架 2.8.0及以上只支持适配android X
    api "com.airbnb.android:lottie:$rootProject.ext.lottieVersion"

    /* ARouter注解编译器 */
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompilerVersion"
    api "com.alibaba:arouter-api:$rootProject.ext.arouterVersion"

    // lightweight stream
    api "com.annimon:stream:$rootProject.ext.streamVersion"

    //zxing
    api "com.google.zxing:core:$rootProject.ext.zxingVersion"
    //内存监控
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakcanaryVerison"

    //Optional, if you use support library fragments:加入后，无法下载资源，编译报错
    //debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:${rootProject.ext.leakcanaryVerison}"

    //找不到javax.annotation.concurrent.NotThreadSafe的类文件 bug，@ThreadSafe
    api "com.google.code.findbugs:jsr305:$rootProject.ext.findBugsVersion"
    api files('libs/commons-lang.jar')
}