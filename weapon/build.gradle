apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
//        debug {
//            minifyEnabled false
//            buildConfigField "boolean", "LOG_DEBUG", "true"//是否输出LOG信息
//        }
//
//        release {
//            minifyEnabled true//开启混淆
////            shrinkResources true//去除无用资源
//
//            buildConfigField "boolean", "LOG_DEBUG", "false"//是否输出LOG信息
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def supportLibraryVersion = '23.4.0'
def retrofitVersion = "2.2.0"
def okhttpVersion = "3.6.0"
def picassoVersion = "2.5.2"
def picassoLoadVersion = "1.1.0"
def glideVersion = "4.8.0"
def rxjavaVersion = "2.2.3"
def rxAndroidVersion = "2.1.0"
def gsonVersion = "2.8.0"
def fastjsonVersoin = "1.2.51"
//再高版本的编译报错，应该是有冲突
def leakcanaryVerison = "1.5.4"
// Sdk and tools
def minSdkVersion = 21
def targetSdkVersion = 23
def compileSdkVersion = 23
def buildToolsVersion = '26.0.2'
def multidexVersion = '1.0.3'
// App dependencies
def junitVersion = '4.12'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "com.android.support:support-annotations:${supportLibraryVersion}"

    //support
    api "com.android.support:appcompat-v7:${supportLibraryVersion}"
    api "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    api "com.android.support:cardview-v7:${supportLibraryVersion}"
    api "com.android.support:multidex:${multidexVersion}"

    // OKHttp
    api "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    api "com.squareup.okhttp3:okhttp-urlconnection:${okhttpVersion}"
    api "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"

    // Retrofit
    api "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    api "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    api "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"

    // RxJava
    api "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    api "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"

    // GSon
    api "com.google.code.gson:gson:${gsonVersion}"
    api "com.alibaba:fastjson:${fastjsonVersoin}"

    // image
    api "com.squareup.picasso:picasso:${picassoVersion}"
    api "com.jakewharton.picasso:picasso2-okhttp3-downloader:${picassoLoadVersion}"

    //去除glide中的support依赖包，防止与项目冲突
    api("com.github.bumptech.glide:glide:${glideVersion}") {
        exclude group: 'com.android.support'
    }

    // gif
    api 'pl.droidsonroids.gif:android-gif-drawable:1.1.16'

    //内存监控
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanaryVerison}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVerison}"

    //Optional, if you use support library fragments:加入后，无法下载资源，编译报错
    //debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:${leakcanaryVerison}"

    //找不到javax.annotation.concurrent.NotThreadSafe的类文件 bug，@ThreadSafe
    api 'com.google.code.findbugs:jsr305:1.3.9'
    api files('libs/commons-lang.jar')
}